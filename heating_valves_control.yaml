blueprint:
  name: Heating Valves Control
  description:
    Automatic heating based on a scheduler, presence of people and optional
    dependencies such as window opening, winter mode or party mode.
  source_url: https://github.com/sardfox/homeassistant/blob/main/heating_valves_control.yaml
  domain: automation
  input:
    heating:
      name: Thermostat
      description: Thermostat to be controlled
      selector:
        entity:
          domain: climate
          multiple: false
    valves:
      name: Valves
      description: Valves
      selector:
        entity:
          domain: climate
          multiple: true
    temperature:
      name: Temperature
      description: Temperature sensors
      selector:
        entity:
          domain: sensor
          device_class: temperature
          multiple: true
    input_temperature:
      name: Input Temperature
      description: Temperature input
      selector:
        entity:
          domain: input_number
          multiple: true
    delta_temp:
      name: Delta Temp
      description: Difference between temperature that triggers the automation.
      default: 0.5
      selector:
        number:
          min: 0
          max: 5
          step: 0.1
          unit_of_measurement: Â°C
          mode: slider
    valves_group:
      name: Valves Group
      description: Valves Group
      selector:
        entity:
          domain: group
          multiple: false
variables:
  valves_group: !input valves_group
  heating: !input heating
  delta_temp: !input delta_temp
  temperature: !input temperature
  input_temperature: !input input_temperature
  valves: !input valves

trigger_variables:
  - entity_triggered: "{{ trigger.entity_id }}"
  - area_id: "{{ area_id(trigger.entity_id) }}"
  - temp_trig: "{{ area_entities(area_id) | selectattr('attributes.device_class', 'eq', 'temperature')}}"
  - input_trig: "{{ area_entities(area_id) | selectattr('attributes.domain', 'eq', 'input')}}"
  - input_low: "{{ (input_trig | float) - delta_temp }}"
  - input_high: "{{ (input_trig | float) + delta_temp }}"

trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
  - platform: state
    entity_id: !input valves_group
  - platform: state
    entity_id: !input input_temperature
  - platform: state
    entity_id: !input temperature

action:
  - choose:
      - conditions:
          - condition: numeric_state
            entity_id: "{{temp_trig}}"
            above: "{{input_high}}"
        sequence:
          - service: climate.set_temperature
            data:
              temperature: "{{climate_off}}"
            target:
              area_id: "{{area_id}}"
      - conditions:
          - condition: numeric_state
            entity_id: "{{temp_trig}}"
            below: "{{input_low}}"
        sequence:
          - service: climate.set_temperature
            data:
              temperature: "{{climate_on}}"
            target:
              area_id: "{{area_id}}"
  - choose:
      - conditions:
          - condition: state
            entity_id: "{{valves_group}}"
            state: "on"
        sequence:
          - service: "{{heating}}"
            data:
              temperature: "{{climate_on}}"
            target:
              entity_id: climate.termostato
      - conditions:
          - condition: state
            entity_id: "{{valves_group}}"
            state: "off"
        sequence:
          - service: climate.set_temperature
            data:
              temperature: "{{climate_off}}"
            target:
              entity_id: "{{heating}}"

mode: queued
